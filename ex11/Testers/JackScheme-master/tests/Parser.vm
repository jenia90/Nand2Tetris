function Parser.isDigit 0
push argument 0
push constant 48
eq
push argument 0
push constant 48
gt
push argument 0
push constant 57
lt
and
or
push argument 0
push constant 57
eq
or
return
function Parser.atom 0
push argument 0
push constant 0
call String.charAt 2
call Parser.isDigit 1
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call String.intValue 1
call NumberCell.new 1
return
goto IF_END0
label IF_FALSE0
push argument 0
push constant 0
call String.charAt 2
push constant 45
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push argument 0
push constant 1
call String.charAt 2
call Parser.isDigit 1
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call String.intValue 1
call NumberCell.new 1
return
label IF_FALSE2
label IF_FALSE1
label IF_END0
push argument 0
call SymbolCell.new 1
return
function Parser.readFromTokens 2
push static 0
call List.head 1
pop local 0
push static 0
call List.tail 1
pop static 0
push local 0
push constant 1
call String.new 1
push constant 40
call String.appendChar 2
call StringList.equals 2
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
pop local 1
label WHILE_EXP0
push static 0
call List.head 1
push constant 1
call String.new 1
push constant 41
call String.appendChar 2
call StringList.equals 2
not
not
if-goto WHILE_END0
call Parser.readFromTokens 0
push local 1
call List.new 2
pop local 1
goto WHILE_EXP0
label WHILE_END0
push static 0
call List.tail 1
pop static 0
push local 1
call List.reverse 1
call ListCell.new 1
return
goto IF_END0
label IF_FALSE0
push local 0
call Parser.atom 1
return
label IF_END0
function Parser.read 1
push argument 0
call Parser.tokenize 1
pop temp 0
call Parser.readFromTokens 0
return
function Parser.toString 1
push argument 0
call Cell.type 1
call CellConsts.LIST 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
call Parser.listToString 1
return
label IF_FALSE0
push argument 0
call Cell.type 1
call CellConsts.NUMBER 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 10
call String.new 1
pop local 0
push local 0
push argument 0
call NumberCell.unwrap 1
call String.setInt 2
pop temp 0
push local 0
return
label IF_FALSE1
push argument 0
call Cell.type 1
call CellConsts.SYMBOL 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push argument 0
call SymbolCell.unwrap 1
return
label IF_FALSE2
push argument 0
call Cell.type 1
call CellConsts.LAMBDA 0
eq
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push constant 8
call String.new 1
push constant 60
call String.appendChar 2
push constant 76
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 109
call String.appendChar 2
push constant 98
call String.appendChar 2
push constant 100
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 62
call String.appendChar 2
return
label IF_FALSE3
push argument 0
call Cell.type 1
call CellConsts.PROC 0
eq
if-goto IF_TRUE4
goto IF_FALSE4
label IF_TRUE4
push constant 6
call String.new 1
push constant 60
call String.appendChar 2
push constant 80
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 99
call String.appendChar 2
push constant 62
call String.appendChar 2
return
label IF_FALSE4
push argument 0
call Cell.type 1
call CellConsts.ERROR 0
eq
if-goto IF_TRUE5
goto IF_FALSE5
label IF_TRUE5
push constant 7
call String.new 1
push constant 60
call String.appendChar 2
push constant 69
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 62
call String.appendChar 2
return
label IF_FALSE5
push constant 32
call String.new 1
push constant 117
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 107
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 119
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 118
call String.appendChar 2
push constant 97
call String.appendChar 2
push constant 108
call String.appendChar 2
push constant 117
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 83
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 105
call String.appendChar 2
push constant 110
call String.appendChar 2
push constant 103
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 102
call String.appendChar 2
push constant 111
call String.appendChar 2
push constant 114
call String.appendChar 2
push constant 32
call String.appendChar 2
push constant 116
call String.appendChar 2
push constant 121
call String.appendChar 2
push constant 112
call String.appendChar 2
push constant 101
call String.appendChar 2
push constant 32
call String.appendChar 2
call Output.printString 1
pop temp 0
push argument 0
call Cell.type 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
call Sys.halt 0
pop temp 0
push constant 1
call String.new 1
push constant 63
call String.appendChar 2
return
function Parser.listToString 2
push constant 1
call String.new 1
push constant 40
call String.appendChar 2
pop local 1
push argument 0
call ListCell.list 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
push local 0
call List.head 1
call Parser.toString 1
push constant 1
call StringList.appendWithExtra 3
pop local 1
push local 1
push constant 32
call String.appendChar 2
pop local 1
push local 0
call List.tail 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push local 1
call String.length 1
push constant 1
sub
call String.charAt 2
push constant 32
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call String.eraseLastChar 1
pop temp 0
label IF_FALSE0
push local 1
push constant 1
call String.new 1
push constant 41
call String.appendChar 2
call StringList.append 2
pop local 1
push local 1
return
function Parser.tokenize 5
push constant 0
pop local 0
push argument 0
call String.length 1
pop local 1
label WHILE_EXP0
push local 0
push local 1
lt
not
if-goto WHILE_END0
push argument 0
push local 0
call String.charAt 2
pop local 2
push local 2
push constant 32
eq
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 2
push constant 40
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 1
call String.new 1
push constant 40
call String.appendChar 2
push static 0
call List.new 2
pop static 0
goto IF_END1
label IF_FALSE1
push local 2
push constant 41
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 1
call String.new 1
push constant 41
call String.appendChar 2
push static 0
call List.new 2
pop static 0
goto IF_END2
label IF_FALSE2
push constant 0
pop local 3
label WHILE_EXP1
push local 0
push local 1
lt
push local 2
push constant 32
eq
not
and
push local 2
push constant 40
eq
not
and
push local 2
push constant 41
eq
not
and
not
if-goto WHILE_END1
push local 3
push constant 1
add
pop local 3
push local 0
push constant 1
add
pop local 0
push local 0
push local 1
lt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push argument 0
push local 0
call String.charAt 2
pop local 2
label IF_FALSE3
goto WHILE_EXP1
label WHILE_END1
push local 0
push local 3
sub
pop local 0
push local 3
call String.new 1
pop local 4
label WHILE_EXP2
push local 4
call String.length 1
push local 3
lt
not
if-goto WHILE_END2
push argument 0
push local 0
call String.charAt 2
pop local 2
push local 4
push local 2
call String.appendChar 2
pop local 4
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP2
label WHILE_END2
push local 0
push constant 1
sub
pop local 0
push local 4
push static 0
call List.new 2
pop static 0
label IF_END2
label IF_END1
label IF_FALSE0
push local 0
push constant 1
add
pop local 0
goto WHILE_EXP0
label WHILE_END0
push static 0
call List.reverse 1
pop static 0
push constant 0
return
