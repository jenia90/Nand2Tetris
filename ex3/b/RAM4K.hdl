// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[0..2], a=selA, b=selB, c=selC, d=selD, e=selE, f=selF, g=selG, h=selH);
    RAM512(in=in, address=address[3..11], load=selA, out=outA);
    RAM512(in=in, address=address[3..11], load=selB, out=outB);
    RAM512(in=in, address=address[3..11], load=selC, out=outC);
    RAM512(in=in, address=address[3..11], load=selD, out=outD);
    RAM512(in=in, address=address[3..11], load=selE, out=outE);
    RAM512(in=in, address=address[3..11], load=selF, out=outF);
    RAM512(in=in, address=address[3..11], load=selG, out=outG);
    RAM512(in=in, address=address[3..11], load=selH, out=outH);
    Mux8Way16(a=outA, b=outB, c=outC, d=outD, e=outE, f=outF, g=outG, h=outH, sel=address[0..2], out=out);
}